{"version":3,"sources":["components/Meeting.js","components/Schedule.js","components/Editor.js","components/Info.js","logic.js","App.js","reportWebVitals.js","index.js"],"names":["Meeting","props","parentMeetings","schedules","parentIndex","meetings","thisMeeting","index","handleChange","event","value","time","innerIndex","target","getAttribute","setSchedules","className","onChange","data-bound","type","onClick","filter","elem","Schedule","number","thisSchedule","bounds","useState","title","setTitle","e","map","push","Editor","id","calculated","length","name","Info","success","resultsTitle","possible","htmlFor","max","min","duration","setDuration","handleFind","handleReturn","findMeetings","schedule","toMinutes","str","parts","split","parseInt","trueBounds","arr","i","sorted","sort","a","b","middle","findBounds","sortedSchedule","possibleMeetings","freeStart","meeting","nextMeetingStart","shift","int","afterColon","minutes","tens","Math","floor","toTime","App","setPossible","setSuccess","setCalculated","fullBounds","fullMeetings","forEach","concat","result","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a21487ff.chunk.js","sourcesContent":["import React from 'react';\r\nimport TimeField from 'react-simple-timefield';\r\n\r\nexport default function Meeting(props) {\r\n    const parentMeetings = props.schedules[props.parentIndex].meetings;\r\n    const thisMeeting = parentMeetings[props.index];\r\n\r\n    const handleChange = (event, value) => {\r\n        const time = value;\r\n        const innerIndex = event.target.getAttribute(\"data-bound\") === \"start\" ? 0 : 1;\r\n        let schedules = [...props.schedules];\r\n        schedules[props.parentIndex].meetings[props.index][innerIndex] = time;\r\n        props.setSchedules(schedules);\r\n    }\r\n\r\n    const handleDelete = () => {\r\n        let schedules = [...props.schedules];\r\n        const meetings = parentMeetings.filter((elem, index) => index !== props.index);\r\n        schedules[props.parentIndex].meetings = meetings;\r\n        props.setSchedules(schedules);\r\n    }\r\n\r\n    return (\r\n        <div className=\"meeting time-pair\">\r\n            <TimeField onChange={handleChange} value={thisMeeting[0]} data-bound=\"start\"/>\r\n            <p>to</p>\r\n            <TimeField onChange={handleChange} value={thisMeeting[1]} data-bound=\"end\" />\r\n            <button type=\"button\" className=\"delete-meeting symbol\" onClick={handleDelete}><i className=\"fas fa-times\"></i></button>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react';\r\nimport Meeting from './Meeting.js'\r\nimport TimeField from 'react-simple-timefield';\r\n\r\nexport default function Schedule(props) {\r\n    const number = (props.index % 5) + 1;\r\n    const thisSchedule = props.schedules[props.index];\r\n    const bounds = thisSchedule.bounds;\r\n\r\n    const [title, setTitle] = useState(`SCHEDULE ${props.index + 1}`);\r\n\r\n    const handleAdd = () => {\r\n        let schedules = [...props.schedules];\r\n        schedules[props.index].meetings.push([\"00:00\",\"00:00\"]);\r\n        props.setSchedules(schedules);\r\n    }\r\n\r\n    const handleChange = (event, value) => {\r\n        const time = value;\r\n        const index = event.target.getAttribute(\"data-bound\") === \"start\" ? 0 : 1;\r\n        let schedules = [...props.schedules];\r\n        schedules[props.index].bounds[index] = time;\r\n        props.setSchedules(schedules);\r\n    }\r\n\r\n    const handleDelete = () => {\r\n        const schedules = props.schedules.filter((elem, index) => index !== props.index);\r\n        props.setSchedules(schedules);\r\n    }\r\n\r\n    const handleTitle = (e) => {\r\n        setTitle(e.target.value);\r\n    }\r\n\r\n    return (\r\n        <div className={`schedule-${number} schedule`}>\r\n            <div className=\"schedule-header\">\r\n                <input type=\"text\" value={title} onChange={handleTitle} className=\"schedule-title\"></input>\r\n                <div className=\"time-pair bounds\"> \r\n                <TimeField data-bound=\"start\" value={bounds[0]} onChange={handleChange}/>\r\n                <p>to</p>\r\n                <TimeField data-bound=\"end\" value={bounds[1]} onChange={handleChange}/>\r\n                </div>\r\n            </div>\r\n            <fieldset className=\"meetings-field\">\r\n                <legend>CURRENT MEETINGS</legend>\r\n                {thisSchedule.meetings.map((elem, index) => <Meeting key={index} index={index} parentIndex={props.index} schedules={props.schedules} setSchedules={props.setSchedules} />)}\r\n                <button type=\"button\" className=\"add-meeting\" onClick={handleAdd}>\r\n                    + Add Meeting\r\n                </button>\r\n            </fieldset>\r\n            <div className=\"delete-schedule\">\r\n            <button type=\"button\" className=\"delete-schedule-button\" onClick={handleDelete}><i className=\"fas fa-minus\"></i></button>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport Schedule from './Schedule.js';\r\n\r\nexport default function Editor(props) {\r\n\r\n    const handleAdd = () => {\r\n        let schedules = [...props.schedules];\r\n        const index = schedules.length;\r\n        schedules.push({\r\n            name: `schedule${index + 1}`,\r\n            bounds: [\"00:00\",\"00:00\"],\r\n            meetings: [[\"00:00\",\"00:00\"]]\r\n        });\r\n        props.setSchedules(schedules);\r\n    }\r\n\r\n    return (\r\n        <div id=\"editor\" className={props.calculated ? \"invisible\" : \"visible\"}>\r\n            {props.schedules.map((elem, index) => <Schedule key={index} index={index} schedules={props.schedules} setSchedules={props.setSchedules} />)}\r\n            <div id=\"create-new\">\r\n                <button type=\"button\" id=\"add-schedule\" onClick={handleAdd}><i className=\"fas fa-plus\"></i></button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\n\r\nexport default function Info(props) {\r\n\r\n    const handleChange = (e) => {\r\n        props.setDuration(e.target.value);\r\n    }\r\n\r\n    const resultsTitle = props.success ? \"Here are your available meeting times:\" : \"Sorry, no meetings found (reason listed below).\"\r\n    const resultsBody = (success) => {\r\n        if (success) {\r\n            return (<ul id=\"results-list\">\r\n                {props.possible.map((elem, index) => <li key={index}>\r\n                    {elem[0]} to {elem[1]}\r\n                </li>)}\r\n            </ul>)\r\n        } else {\r\n            return (<p id=\"error\">{props.possible}</p>)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div id=\"full-info\" className={props.calculated ? \"show-all\" : \"show-bar\"}>\r\n            <div id=\"results\" className={props.calculated ? \"mobile-show\" : \"mobile-hide\"}>\r\n                <h2 id=\"results-title\">{resultsTitle}</h2>\r\n                {resultsBody(props.success)}\r\n            </div>\r\n            <div id=\"info\" className={props.calculated ? \"right-side\" : \"left-side\"}>\r\n                <h1>Meeting Scheduler</h1>\r\n                <h2>Instructions</h2>\r\n                <p>Enter the schedule bounds underneath the schedule name. Enter currently filled meeting times under \"Current Meetings\". To add a new meeting, click the add meeting button. To remove any meeting, click the x at the end of the meeting.\r\n                    <br /><br />To add a new schedule, click the grey \"+\" button. To remove a schedule, click the \"-\" button on the right of the schedule.\r\n                    <br /><br />All times must be in military time format, from 00:00 to 23:59. Enter the duration of the meeting you want to schedule below, in minutes. Click the \"Find Meetings!\" button to calculate what time slots are available to all schedules.\r\n                </p>\r\n                <div>\r\n                    <label htmlFor=\"duration\">Meeting Duration</label>\r\n                    <input type=\"number\" max=\"1339\" min=\"1\" value={props.duration} id=\"duration\" onChange={handleChange}></input>\r\n                </div>\r\n                {!props.calculated && <button type=\"button\" id=\"final\" onClick={props.handleFind}>Find meetings!</button>}\r\n                {props.calculated && <button type=\"button\" id=\"return\" onClick={props.handleReturn}>Back to Editor</button>}\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n","const findMeetings = (duration, bounds, schedule) => {\r\n    // this function can handle a variable number of different schedules/bounds so long as they are combined into one before being passed into the function\r\n\r\n    // a functioon to convert time string into an integer representing minutes, from 0 to 1439\r\n\r\n    const toMinutes = (str) => {\r\n        const parts = str.split(\":\");\r\n        return (parseInt(parts[0]) * 60) + (parseInt(parts[1]));\r\n    }\r\n\r\n    // a function to convert integer representing minutes into a time string, from \"00:00\" to \"23:59\"\r\n\r\n    const toTime = (int) => {\r\n        const afterColon = int % 60;\r\n        const minutes = afterColon % 10;\r\n        const tens = Math.floor(afterColon / 10);\r\n        const hours = (int - afterColon) / 60;\r\n        return `${hours}:${tens}${minutes}`;\r\n    }\r\n\r\n    // a function to make sure all of the bounds overlap and if they do, sort them, then use the middle values to return the most restrictive bounds between all schedules\r\n\r\n    const findBounds = (arr) => {\r\n        for (let i = 0; i < arr.length - 2; i += 2) {\r\n            if (arr[i + 2] > arr[i + 1]) {\r\n                return null;\r\n            } else if (arr[i + 3] < arr[i]) {\r\n                return null;\r\n            }\r\n        }\r\n        const sorted = arr.sort((a, b) => a - b);\r\n        const middle = sorted.length / 2;\r\n        return [sorted[middle - 1], sorted[middle]];\r\n    }\r\n\r\n\r\n    // convert the bounds to minute notation, then find the most restrictive bounds. If schedules don't overlap return message informing so.\r\n    const trueBounds = findBounds(bounds.map(elem => toMinutes(elem)));\r\n\r\n    if (trueBounds === null) {\r\n        return \"No possible meetings: schedules do not overlap.\";\r\n    }\r\n\r\n    // convert each scheduled meeting to minute notation and sort the array of meetings by start time\r\n    const sortedSchedule = schedule.map(elem => elem.map(elem => toMinutes(elem))).sort((a, b) => a[0] - b[0]);\r\n\r\n    // the final array of possible meeting times\r\n    const possibleMeetings = [];\r\n\r\n    /* this loop uses a start time (initially the starting bound), checks if the next scheduled meeting start time is \r\n    at least the meeting duration away, and if it is, adds that time span to the possible meetings array, \r\n    and if it is not, sets the start time to the ending of that meeting and continues the process with the next \r\n    scheduled meeting */\r\n    let freeStart = trueBounds[0];\r\n    while (freeStart < trueBounds[1]) {\r\n        const meeting = sortedSchedule[0];\r\n        const nextMeetingStart = sortedSchedule.length === 0 || meeting[0] > trueBounds[1] ? trueBounds[1] : meeting[0];\r\n        if (nextMeetingStart - freeStart >= duration) {\r\n            possibleMeetings.push([freeStart, nextMeetingStart]);\r\n        }\r\n        freeStart = sortedSchedule.length === 0 ? trueBounds[1] : meeting[1] < trueBounds[0] ? trueBounds[0] : meeting[1];\r\n        sortedSchedule.shift();\r\n    }\r\n\r\n    if (possibleMeetings.length === 0) {\r\n        return \"No possible meetings: no common availability.\"\r\n    } else {\r\n        return possibleMeetings.map(elem => elem.map(elem => toTime(elem)));\r\n    }\r\n}\r\n\r\nexport default findMeetings;","import Editor from './components/Editor.js';\nimport Info from './components/Info.js';\nimport React, { useState } from 'react';\nimport findMeetings from './logic.js';\n\nfunction App() {\n\n  const [schedules, setSchedules] = useState([{\n    name: \"schedule1\",\n    bounds: [\"00:00\", \"00:00\"],\n    meetings: [[\"00:00\", \"00:00\"]]\n  }]);\n  const [duration, setDuration] = useState(30);\n  const [possible, setPossible] = useState([]);\n  const [success, setSuccess] = useState(false);\n  const [calculated, setCalculated] = useState(false);\n\n  const handleFind = () => {\n    let fullBounds = [];\n    let fullMeetings = [];\n    schedules.forEach(elem => {\n      fullBounds = fullBounds.concat(elem.bounds);\n      fullMeetings = fullMeetings.concat(elem.meetings);\n    });\n    const result = findMeetings(duration, fullBounds, fullMeetings);\n    if (typeof result === \"string\") {\n      setSuccess(false);\n    } else {\n      setSuccess(true);\n    }\n    setCalculated(true);\n    setPossible(result);\n  }\n\n  const handleReturn = () => {\n    setCalculated(false);\n  }\n\n  return (\n    <div className=\"App\" id=\"app\">\n      <Info \n        duration={duration} \n        setDuration={setDuration} \n        handleFind={handleFind} \n        possible={possible} \n        success={success} \n        calculated={calculated} \n        handleReturn={handleReturn} \n        />\n      <Editor \n        schedules={schedules} \n        setSchedules={setSchedules} \n        calculated={calculated} \n        />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}